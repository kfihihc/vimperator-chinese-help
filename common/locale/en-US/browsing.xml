<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="chrome://liberator/content/help.xsl"?>

<!DOCTYPE document SYSTEM "chrome://liberator/content/liberator.dtd">

<document
    name="browsing"
    title="&liberator.appname; 网页浏览"
    xmlns="http://vimperator.org/namespaces/liberator"
    xmlns:html="http://www.w3.org/1999/xhtml">
<h1 tag="surfing browsing">网页浏览</h1>
<toc start="2"/>

<h2 tag="ignoring">暂时停用 &liberator.appname;</h2>

&liberator.appname; 为保证 Vim 用户流畅使用，几乎重写所有的 Firefox 按键。但在某些情况下，你可能想把某击键传递给 &liberator.host; 又或网页，必须保持击键的原来意义，则可以有两个办法：

<item>
    <tags><![CDATA[ignore-all-keys <S-Esc> <Insert>]]></tags>
    <spec>&lt;S-Esc></spec>
    <spec>&lt;Insert></spec>
    <description>
        <p>
			禁用 &liberator.appname; 所有的击键，将它们传递给下一个事件处理器。在 JavaScript 控制的表单（比如 Gmail 的 RichEdit 表单域）不再工作时，这可以派上用场。又或者你想使用自带大量快捷键的 web apps 如 Google Reader 时。要退出这个模式，再次按<k name="S-Esc"/>。<k name="Esc"/> 是一个特殊情况，虽然它仍发送给网页，但仍然能让输入域失去焦点。
        </p>
    </description>
</item>


<item>
    <tags>ignore-key i</tags>
    <spec>i</spec>
    <description>
        <p>
			如果你只是需要传递一个击键给 JavaScript 表单域或是另一个扩展时，事先按下 <k>i</k> 键即可。这对于唤出被 &liberator.appname; 隐藏的 &liberator.host; 快捷键 <k name="C-o"/> 同样适用。
        </p>
    </description>
</item>


<h2 tag="opening">打开网页</h2>

<item>
    <tags>o :o :open</tags>
    <spec>:o<oa>pen</oa> <oa>arg1</oa>, <oa>arg2</oa>, …</spec>
    <spec>o</spec>
    <description>
        <p>
			在当前标签页中打开一个或多个 URLs。多个 URL 可以用 <o>urlseparator</o> 来分隔（默认为 ","，注意逗号后的空格是必须的）。第一个 URL 在当前标签页中打开，其余的 URL 在新标签页里打开。每个参数按以下顺序分析：
        </p>

        <ol>
            <li>
				如果参数是个已有的相对或绝对文件名，则打开本地电脑上的文件。
                <ul>
                    <li><ex>:open /etc/fstab</ex> 打开系统表。</li>
                    <li>在你的 home 目录下，<ex>:open ../other/foo.html</ex> 打开 <tt>/home/other/foo.html</tt> 文件</li>
                </ul>
            </li>
            <li>
				 如果参数看起来像是搜索词串且第一个单词是某个搜索引擎的名称，则使用该搜索引擎搜索关键词 （<ex>:open wikipedia linus torvalds</ex> 打开 Wikipedia 上的 linus torvalds 条目）。搜索引擎的短名称由其名字自动猜出。如果你想设置一个名称，则可以通过 <ex>:dialog searchengines</ex> 来作更改。
            </li>
            <li>
				如果第一个词不是搜索引擎名称，则使用关键字或默认搜索引擎打开 （由 <o>defsearch</o> 来确定），比如 <ex>:open linus torvalds</ex> 打开 Google 搜索 linus torvalds。
           </li>
           <li>
			   其他情况下直接传递给 &liberator.host; （<ex>:open www.osnews.com, www.slashdot.org</ex> 在当前页打开 OSNews 网站，在背景标签页中打开 Slashdot 网站）。
           </li>
        </ol>

        <p>
            You can use <ex>:open -tags linux torvalds<k name="Tab"/></ex> to complete bookmarks with
            tag "linux" and which contain "torvalds". Note that -tags support is only
            available for tab completion, not for the actual command.
            The items which are completed on <k name="Tab"/> are specified in the <o>complete</o>
            option.
        </p>
    </description>
</item>


<item>
    <tags>t :t :tabopen :tabnew</tags>
    <spec>:tabopen<oa>!</oa> <oa>arg1</oa>, <oa>arg2</oa>, …</spec>
    <spec>t</spec>
    <description>
        <p>
			与 <ex>:open</ex> 相似，但第一个 URL 也是在新标签页中打开。与 <oa>!</oa> 一同使用时，<o>activate</o> 选项中 <em>tabopen</em> 的值被逆转。
        </p>
    </description>
</item>


<item>
    <tags>T</tags>
    <spec>T</spec>
    <description>
        <p>
			在命令行上显示 <ex>:tabopen</ex> 命令，并自动补入当前页面 URL。如果你要通过编辑当前页 URL地址访问其他网址，这很好用。
        </p>
    </description>
</item>


<item>
    <tags>:tabdu :tabduplicate</tags>
    <spec>:<oa>count</oa>tabdu<oa>plicate</oa><oa>!</oa></spec>
    <description>
        <p>
			复制当前标签页 <oa>count</oa> 次。<o>activate</o> 的 <em>tabopen</em> 的值可以决定所复制的最后一个标签页是否置为当前。与 <oa>!</oa> 一同使用时，<em>tabopen</em> 的值被逆转。
        </p>
    </description>
</item>


<item>
    <tags>O</tags>
    <spec>O</spec>
    <description>
        <p>
			在命令行上显示 <ex>:open</ex> 命令并自动补入当前页面 URL。如果你在基于当前页面的 URL 地址访问其他网址，这可以用到。
        </p>
    </description>
</item>


<item>
    <tags>w :winopen :wopen</tags>
    <spec>:wino<oa>pen</oa><oa>!</oa> <oa>arg1</oa>, <oa>arg2</oa>, …</spec>
    <spec>w</spec>
    <description>
        <p>近于 <ex>:tabopen</ex>，只不过在新窗口中打开结果页。</p>
    </description>
</item>


<item>
    <tags>W</tags>
    <spec>W</spec>
    <description>
        <p>
			基于当前地址，在新窗口中打开一个或多个 URL。类似于 <k>w</k>，只不过在 <ex>:winopen</ex> 命令里预选了当前页 URL 地址。
        </p>
    </description>
</item>


<item>
    <tags><![CDATA[<MiddleMouse> p]]></tags>
    <spec>p</spec>
    <description>
        <p>
			在当前 buffer 打开当前剪切板中的 URL 地址。你也可以选中（非 X11 用户请复制）某些非 URL 的文本，然后按 <k>p</k> 可以使用默认搜索引擎或关键字搜索（由 <o>defsearch</o> 选项设定）。
        </p>
    </description>
</item>


<item>
    <tags>P</tags>
    <spec>P</spec>
    <description>
        <p>
			基于当前剪切板内容在新 buffer 里打开 URL。类于 <k>p</k>，只是在新标签页中打开。
        </p>
        <p>
			<o>activate</o> 选项决定是否新标签页置为当前。
        </p>
    </description>
</item>


<item>
    <tags>gP</tags>
    <spec>gP</spec>
    <description>
        <p>
			基于当前剪切板内容在新 buffer 中打开 URL。类于 <k>P</k>，但反转了 <o>activate</o> 选项。
        </p>
    </description>
</item>


<item>
    <tags><![CDATA[<C-x>]]></tags>
    <spec><oa>count</oa>&lt;C-x></spec>
    <description>
        <p>
			将 URL 地址最后一个数字值减 1，又或者减去 <oa>count</oa> 值。因为负数基本上不怎么有用到，所以不支持负数，最多只能减到 0。
        </p>
    </description>
</item>


<item>
    <tags><![CDATA[<C-a>]]></tags>
    <spec><oa>count</oa>&lt;C-a></spec>
    <description>
        <p>将 URL 地址最后一个数字值加上 1，又或者加上 <oa>count</oa> 值。</p>
    </description>
</item>


<item>
    <tags>~</tags>
    <spec>~</spec>
    <description>
        <p>
			打开 home 目录。这其中你可以使用 hints，这可能会是地球上最快的文件浏览器。：）
        </p>
    </description>
</item>


<h2 tag="navigating">导航</h2>

<item>
    <tags><![CDATA[H <C-o> CTRL-O :ba :back]]></tags>
    <spec>:<oa>count</oa>ba<oa>ck</oa> <oa>url</oa></spec>
    <spec>:ba<oa>ck</oa>!</spec>
    <spec>CTRL-o</spec>
    <description>
        <p>
			在浏览器历史中后退 <oa>count</oa> 页。指定 <oa>url</oa> 的话则是后退到第一个符合的 URL 页。特殊版本 <ex>:back!</ex> 后退到浏览器历史记录的最先一个页面。
        </p>
    </description>
</item>


<item>
    <tags><![CDATA[L <C-i> CTRL-i :fo :fw :forward]]></tags>
    <spec>:<oa>count</oa>fo<oa>rward</oa> <oa>url</oa></spec>
    <spec>:fo<oa>rward</oa>!</spec>
    <spec>CTRL-i</spec>
    <description>
        <p>
			在浏览器历史中前进 <oa>count</oa> 页。如果带 <oa>url</oa> 参数，则前进到第一个符合的 URL。版本 <ex>:forward!</ex> 表示进到浏览器历史的最后一个页面。
        </p>
    </description>
</item>


<item>
    <tags>:ju :jumps</tags>
    <spec>:ju<oa>mps</oa></spec>
    <description>
        <p>列出所有跳转点，即当前标签页历史即会话历史记录。</p>

        <p>
			当前历史位置用 > 标识，跳转数字用于在 <ex>:back</ex> （0 以上数字）或 <ex>:forward</ex> （0 以下数字）中搭配使用。
			
        </p>
    </description>
</item>


<item>
    <tags>gh</tags>
    <spec>gh</spec>
    <description>
        <p>在当前标签页中打开浏览器主页。</p>
    </description>
</item>


<item>
    <tags>gH</tags>
    <spec>gH</spec>
    <description>
        <p>
			在新标签页中打开浏览器主页。新标签页是否置为当前取决于 <o>activate</o> 选项。
        </p>
    </description>
</item>


<item>
    <tags>gu</tags>
    <spec><oa>count</oa>gu</spec>
    <description>
        <p>跳转到第 <oa>count</oa> 层父目录。</p>

        <p>按 <k>gu</k> 将按以下顺序上溯 URL 地址：</p>
        <ul>
            <li><tt>http://www.example.com/path/to/file.txt?query=value#anchor</tt></li>
            <li><tt>http://www.example.com/path/to/file.txt?query=value</tt></li>
            <li><tt>http://www.example.com/path/to/file.txt</tt></li>
            <li><tt>http://www.example.com/path/to/</tt></li>
            <li><tt>http://www.example.com/path/</tt></li>
            <li><tt>http://www.example.com/</tt></li>
            <li><tt>http://example.com/</tt></li>
        </ul>

    </description>
</item>


<item>
    <tags>gU</tags>
    <spec>gU</spec>
    <description>
        <p>跳到网站根目录。</p>

        <p>
            <k>gU</k> on <tt>http://www.example.com/dir1/dir2/file.htm</tt> 打开
            <tt>http://www.example.com/</tt>.
            如果在浏览本地目录，则访问到根目录。
        </p>
    </description>
</item>


<h2 tag="reloading">重载</h2>

<item>
    <tags>r</tags>
    <spec>r</spec>
    <description>
        <p>强制重载当前页。</p>
    </description>
</item>


<item>
    <tags>R</tags>
    <spec>R</spec>
    <description>
        <p>跳过缓存内容，强制重载当前页面。</p>
    </description>
</item>


<item>
    <tags>:re :reload</tags>
    <spec>:re<oa>load</oa><oa>!</oa></spec>
    <description>
        <p>
			重载当前页面。强制重载当前页面。<oa>!</oa> 表示跳过缓存内容。
        </p>
    </description>
</item>


<item>
    <tags>:reloada :reloadall</tags>
    <spec>:reloada<oa>ll</oa><oa>!</oa></spec>
    <description>
        <p>重载所有页面。强制重载所有页面。<oa>!</oa> 表示跳过缓存内容。</p>
    </description>
</item>


<h2 tag="stopping">停止</h2>

<item>
    <tags><![CDATA[<C-c>]]></tags>
    <spec>&lt;C-c></spec>
    <description>
        <p>
		   停止载入当前网页。如果有选择文本，则是复制文本到剪切板。不过通常这不是个问题，因为页面在载入时，基本不可能有文本被选中准备复制。
        </p>
    </description>
</item>


<item>
    <tags>:st :stop</tags>
    <spec>:st<oa>op</oa></spec>
    <description>
        <p>停止载入当前网页。</p>
    </description>
</item>


<item>
    <tags>:stopa :stopall</tags>
    <spec>:stopa<oa>ll</oa></spec>
    <description>
        <p>停止载入所有网页。</p>
    </description>
</item>


<h2 tag="writing save-file">写入</h2>

<item>
    <tags>:w :write :sav :saveas</tags>
    <spec>:sav<oa>eas</oa><oa>!</oa> <oa>file</oa></spec>
    <description>
        <p>
			保存当前网页到硬盘。如果没有明确指定 <oa>file</oa>，则保存为页面的默认文件名。如果明确给定 <oa>!</oa>，则已有的同名文件会被覆盖。
        </p>
    </description>
</item>


<h2 tag="quitting save-session">退出</h2>

<item>
    <tags>:q :quit</tags>
    <spec>:q<oa>uit</oa></spec>
    <description>
        <p>
			退出当前标签页。如果这是窗口中的最后一个标签页，则关闭窗口。如果这是最后一个窗口，则关闭 &liberator.appname;。在退出 &liberator.appname;时，会话不保存。
        </p>
    </description>
</item>


<item>
    <tags>:qa :qall :quita :quitall</tags>
    <spec>:quita<oa>ll</oa></spec>
    <description>
        <p>
			退出 &liberator.appname;。无论开启着多少个标签页/窗口，都退出 &liberator.appname;，会话不保存。
        </p>
    </description>
</item>


<item>
    <tags>:wc :wclose :winc :winclose</tags>
    <spec>:winc<oa>lose</oa></spec>
    <description>
        <p>关闭窗口。</p>
    </description>
</item>


<item>
    <tags>:winon :winonly</tags>
    <spec>:winon<oa>ly</oa></spec>
    <description>
        <p>关闭所有其他窗口。</p>
    </description>
</item>


<item>
    <tags>:xa :xall :wq :wqa :wqall</tags>
    <spec>:wqa<oa>ll</oa></spec>
    <spec>:xa<oa>ll</oa></spec>
    <description>
        <p>
			保存会话并退出。无论打开着多少个标签页/窗口，都退出 &liberator.appname;。会话被保存。<ex>:wq</ex> 与 Vim 下的作用不一样，在这里关闭的是窗口，而非平常所见的关闭一个标签页。如果你想改掉那，请在邮件列表上发牢骚吧。
        </p>
    </description>
</item>


<item>
    <tags>ZQ</tags>
    <spec>ZQ</spec>
    <description>
        <p>退出，不保存会话。与 <ex>:qall</ex> 作用一样。</p>
    </description>
</item>


<item>
    <tags>ZZ</tags>
    <spec>ZZ</spec>
    <description>
        <p>
			退出并保存会话。无论打开着多少个标签页/窗口，都退出 &liberator.appname;，但保存会话，就像 <ex>:xall</ex> 一样。
        </p>
    </description>
</item>


<h2 tag="current-directory">当前目录</h2>

<item>
    <tags>:chd :chdir :cd</tags>
    <spec>:cd <oa>-|path</oa></spec>
    <description>
        <p>更改当前目录位置。<ex>:cd -</ex> 切换到上一个访问的目录。</p>
    </description>
</item>


<item>
    <tags>:pw :pwd</tags>
    <spec>:pw<oa>d</oa></spec>
    <description>
        <p>输出当前目录名称。</p>
    </description>
</item>


</document>

<!-- vim:se sts=4 sw=4 et: -->
