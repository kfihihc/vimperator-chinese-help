<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="chrome://liberator/content/help.xsl"?>

<!DOCTYPE document SYSTEM "chrome://liberator/content/liberator.dtd">

<document
    name="tutorial"
    title="&liberator.appname; 教程"
    xmlns="http://vimperator.org/namespaces/liberator"
    xmlns:html="http://www.w3.org/1999/xhtml">
<!-- Initial revision: Sun Jun  8 10:07:05 UTC 2008 (penryu) -->

<h1 tag="tutorial">快速入门教程</h1>

<html:p style="text-align: center">
	这是快速入门教程，帮助新用户上手 &liberator.appname;。它并非完整的参考，并不解释所有的特性。
</html:p>

<h2 tag="modal">&liberator.appname; 的模式界面</h2>

<p>
	&liberator.appname; 的强大，类于 Vim，来自于它的模式界面。浏览器所处的模式不同，键就有不同的意义。&liberator.appname; 有多个模式，两个最重要的模式是<em>正常</em>模式与<em>命令行</em>模式。
</p>

<p>
	&liberator.appname; 启动时，默认处于正常模式。这也将是费上你最多时间的地方。
</p>

<p>
	&liberator.appname; 的另一个核心模式，命令行模式，可以在正常模式下键入 <k>:</k>(冒号)进入。你将会经常看到以 <k>:</k> 开头的 &liberator.appname; 命令，指示着后来所跟的是一个命令。
</p>

<p>
	要从命令行模式返回正常模式，请按 <k name="Esc"/> 键。在 &liberator.appname; 里，大部分其他模式都可以通过按 <k name="Esc"/> 键返回正常模式。
</p>

<h2 tag="getting-help">取得帮助</h2>

<p>
	Vim 是一个伟大的编辑器，但它并非一个 web 浏览器。因此哪怕是 Vim 的熟手，也可能需要不时查阅 &liberator.appname; 文档。&liberator.appname; 的大部分文档都可以通过 <ex>:help</ex> 命令来轻松找得。比如，你可以键入以下命令找到关于 <ex>:help</ex> 命令的帮助:
</p>

<code><ex>:help :help<key name="CR"/></ex></code>

<p>
	类似的，配置选项的帮助内容也可以通过 <ex>:help '<a>option+name</a>'</ex> 命令来取得。（注意选项名两边的单引号，这是与 Vim 一致的）可以想到，所有选项的帮助信息可以通过 <ex>:help options</ex> 来取得。
</p>

<p>
	因此你可以通过下列命令取得 <k>gt</k> 和 <k>gT</k> 映射的信息	
</p>

<code>
<ex>:help gt<key name="CR"/></ex>
<ex>:help gT<key name="CR"/></ex>
</code>

<p>
	最后，除了帮助系统外，<ex>:exusage</ex>、<ex>:viusage</ex> 和 <ex>:optionusage</ex> 也是有用的快速参考命令。
</p>

<h2 tag="living-mouseless">无鼠标化</h2>

<em>– 或说我怎样or how I learned to stop worrying and love the 80+ buttons I already have.</em>

<p>
	&liberator.appname; 的高效性，正如它所受启示的传奇编辑器一样，在于用户可以在保持手指在键盘上时就可以完成绝大部分工作。虽说在某些领域比如图形用户界面设计或一些游戏中，鼠标显然要更擅长，但 &liberator.appname; 认为 web 浏览器不必要成为它们中的一个。不过如果你更喜欢移动这小小的啮齿动物，鼠标也当然是全然支持的。
</p>

<h2 tag="keyboard-scrolling">滚动</h2>

<p>
	滚动浏览器窗口可以通过简单几个按键完成：
</p>

<ul>
    <li><k>j</k>/<k>k</k> –
		相应的向下/上滚动一行的窗口
    </li>
    <li><k>h</k>/<k>l</k> –
		左/右滚动窗口
    </li>
    <li><k name="Space"/>/<k name="C-b"/> –
		向下/上滚动一页的窗口
    </li>
    <li><k name="C-d"/>/<k name="C-u"/> –
		向下/上滚动半页的窗口
    </li>
</ul>

<p>
	标准按键（<k name="Up"/>/<k name="Down"/>/<k name="PgUp"/>/<k name="PgDn"/>）也如所你所料的还一样工作着。
</p>

<h2 tag="history-navigation tab-navigation">历史记录与标签页</h2>

<p>
    History navigation (e.g., <em>Back</em>, <em>Forward</em>) are done similarly to
    scrolling.
	类似于滚动窗口，历史记录的导航（譬如 <em>Back</em>，<em>Forward</em>） 也很简单。
</p>

<ul>
    <li><k name="C-o"/>/<k name="C-i"/> –
		相应地在当前窗口/标签页历史记录中后退/前进
    </li>
</ul>

<p>
	对于使用标签页的 Vimmers 来说，在标签页间移动所用的按键应该很熟悉。
</p>

<ul>
    <li><k>gt</k>/<k name="C-n"/> –
		转到下一个标签页
    </li>
    <li><k>gT</k>/<k name="C-p"/> –
		转到上一个标签页
    </li>
    <li><k>g0</k>/<k>g$</k> –
		转到第一个/最后一个标签页
    </li>
    <li><k>d</k> –
		关闭当前标签页（删除 buffer）
    </li>
</ul>

<p>
	<ex>:tabopen <a>url</a></ex> 在新标签页中打开网页，<ex>:open</ex> 命令则在当前标签页中打开一个 URL。正常模式下，<k>t</k> 和 <k>o</k> 相应地被映射给这些命令，因此下面成双的命令结果是相当的：
</p>

<code>
<ex>:open my.webmail.com<key name="CR"/></ex>
<k>o</k>my.webmail.com<key name="CR"/>

<ex>:tabopen vimperator.org<key name="CR"/></ex>
<k>t</k>vimperator.org<key name="CR"/>
</code>

<h2 tag="hints-tutorial">Some hints about surfing…</h2>

<p>
    So now you can navigate around in &liberator.appname;. But wait… how do you <em>open</em> a
    page or tab linked in a web page? How do you <em>click</em> on all those links
    without your tailed friend?
</p>

<p>
    The answer is <em>hints</em>. Activating hints displays a number next to every link
    &liberator.appname; can find. To follow the link, simply type the number corresponding
    to the hint, a white number inside a red square by default.
</p>

<p>
    For text links, there's an additional shortcut; you can type some text
    contained in the link and &liberator.appname; will search all the links it can find and
    only hint the matching links, further narrowing down the list. If the text you
    type uniquely identifies any given link, &liberator.appname; will follow that link
    immediately without any further user input.
</p>

<p>
    Whichever way you choose to indicate your target link, once &liberator.appname; has
    highlighted the link you want, simply hit <k name="Enter"/> to open it.
</p>

<p>
    The most common hint mode is called <t>quick-hints</t>.
    To activate QuickHint mode, press either <k>f</k> or <k>F</k>. The lower-case
    <k>f</k> will open the resulting link in the current tab, while the upper-case
    <k>F</k> will open it in a new tab.
</p>

<p>
    To test it, try this link: <link topic="http://vimperator.org/">&liberator.appname; Homepage</link>.
    Activate QuickHint mode with <k>f</k> or <k>F</k> to highlight all currently
    visible links. Then start typing the text of the link. The link should be
    uniquely identified soon, and &liberator.appname; will open it. Once you're done,
    remember to use <k name="C-o"/> (<em>History Back</em>) or <k>d</k> (<em>Delete Buffer</em>)
    to return here, depending on which key you used to activate QuickHint mode.
</p>

<h2 tag="common-issues">Common issues</h2>

<p>
    Say you get half-way done typing in a new URL, only to remember that you've
    already got that page open in the previous tab. Your command line might look
    something like this:
</p>

<code><ex>:open my.partial.url/fooba</ex></code>

<p>
    You can exit the command line and access the already loaded page with the
    following:
</p>

<code><k name="Esc"/></code>

<h2 tag="vimperatorrc">Saving for posterity - vimperatorrc</h2>

<p>
    Once you get &liberator.appname; set up with your desired options, maps, and commands,
    you'll probably want them to be available the next time you open &liberator.appname;.
    Continuing the Vim theme, this is done with a vimperatorrc file.
</p>

<p>
    To save your current settings and allow them to be loaded automatically
    next time you start &liberator.appname;, issue the <ex>:mkv</ex> command.
</p>

<p>
    This will create the file <em>$HOME/.vimperatorrc</em> containing your settings.
    It is a simple text file, just like a vimrc file and can be easily
    edited to suit your preferences.
</p>

<h2 tag="quitting-without-menus">Find the exit nearest you</h2>

<p>
    &liberator.appname; supports all of Vim's classic methods of exiting.
</p>

<ul>
    <li><ex>:xall</ex> – command to quit and save the current browsing
        session for next time; the default.
    </li>
    <li><ex>:qall</ex> – command to quit <em>without</em> saving the session
    </li>
    <li><k>ZZ</k> – Normal mode mapping equivalent to <ex>:xall</ex>
    </li>
    <li><k>ZQ</k> – Normal mode mapping equivalent to <ex>:qall</ex>
    </li>
</ul>

<h2 tag="whither-&liberator.host;">Where did &liberator.host; go?</h2>

<p>
    You might feel pretty disoriented now. Don't worry. This is still &liberator.host;
    underneath. Here are some ways &liberator.appname; allows &liberator.host; to shine through. See
    the <ex>:help</ex> for these commands and mappings for more information on how to
    make the best use of them.
</p>

<ul>
    <li><ex>:dialog</ex> –
        To access some of &liberator.host;'s many dialog windows, you can use the
        <ex>:dialog</ex> command. See <ex>:help :dialog</ex>.
    </li>
    <li><ex>:bmarks</ex> –
        &liberator.appname; provides a new interface to bookmarks, but they're still your
        standard &liberator.host; bookmarks under the hood. <ex>:bmark</ex> will add a new
        bookmark, while <ex>:bmarks</ex> will list the bookmarks currently defined.
    </li>
    <li><ex>:history</ex> –
        It's exactly what it sounds like. This command will display a colorized,
        scrollable and clickable list of the locations in &liberator.appname;'s history.
    </li>
    <li><ex>:emenu</ex> –
        Access the &liberator.host; menus through the &liberator.appname; command line.
    </li>
</ul>

<p>
    Feel free to explore at this point. If you use the <ex>:tabopen</ex> command,
    remember to use the <k>gt</k>/<k>gT</k> mappings to get back to this page. If
    using the <ex>:open</ex> command, use the history keys (e.g., <k>H</k>) to return.
    If you get hopelessly lost, just type <ex>:help<key name="CR"/></ex> and click the
    <em>Tutorial</em> link to return.
</p>


<!-- TODO: other sections? -->


<h2 tag="removal">Get me out of here!</h2>

<p>
    If you've given it a fair shot and determined … TODO
</p>

<p>
    The &liberator.appname; way to do this is with the command <ex>:addons</ex>. Issuing this
    command brings up the &liberator.host; Add-ons dialog window; you can then remove it as
    normal, selecting &liberator.appname; from the list and clicking (yes, clicking)
    <em>Uninstall</em>.
</p>

<p>
    Alternatively, you can do this the old-fashioned way: re-enable the menubar,
    as above, with <ex>:set toolbars=menu</ex>, and select <em>Add-ons</em> from the <em>Tools</em> menu.
</p>


<h2 tag="support">I'm interested… but lost!</h2>

<p>
    &liberator.appname; has an energetic and growing user base. If you've run into a problem
    that you can't seem to solve with &liberator.appname;, or if you think you might have
    found a bug, please let us know! There is support available on the
    <link topic="http://code.google.com/p/vimperator-labs/w/list?q=label%3Aproject-vimperator">wiki</link>
    or in the <link topic="irc://irc.freenode.net/vimperator">#vimperator</link> IRC
    channel on <link topic="http://freenode.net/">freenode</link>.
</p>

<p>
    If you have any feature requests or (even better) offers to help, we'd love to
    hear from you as well. Developers work on &liberator.appname; whenever possible, but we
    are neither infinite nor omnipotent; please bear with us. If you can't wait for
    us to get around to it, rest assured patches are welcome! See the
    <t>developer</t> page for more information.
</p>

</document>
<!-- vim:se sts=4 sw=4 et: -->
